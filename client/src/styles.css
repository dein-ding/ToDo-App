/* You can add global styles to this file, and also import other style files */
/* @import url(./customDialog.css); */

:root {
    --: hsl(268, 100%, 50%);
    
    --primary-clr-hue: 44;
    --primary-clr: hsl(var(--primary-clr-hue), 100%, 50%);
    --secondary-clr-hue: 270;
    --secondary-clr: hsl(var(--secondary-clr-hue), 100%, 60%);

    --danger-clr-hue: 0;
    --danger-clr: hsl(var(--danger-clr-hue), 100%, 50%);

    --complete-clr-hue: 113;
    --complete-clr: hsl(var(--complete-clr-hue), 100%, 47%);

    --btn-icon-size: 2rem;

    --bg-clr-hue: 234;
    
    --dark-theme-global-background: hsl(var(--bg-clr-hue), 5%, 14%);
    --dark-theme-global-color: white;
    --light-theme-global-background: hsl(var(--bg-clr-hue), 10%, 91%);
    --light-theme-global-color: hsl(var(--bg-clr-hue), 14%, 14%);

    --primary-font: futura, helvetica, arial, sans-serif;

    --box-shadow-s: 0 0 20px rgba(0, 0, 0, 0.61);
    --box-shadow-m: 0 0 10px rgba(0, 0, 0, 0.603), 0 0 20px rgba(0, 0, 0, 0.61);
    --box-shadow-l: 0 0 20px rgba(0, 0, 0, 0.514), 0 0 40px rgba(0, 0, 0, 0.514);

    --modal-padding: 20px;
}
/* @media (prefers-color-scheme: light) {
    :root {
        --global-background: var(--light-theme-global-background);
        --global-color: var(--light-theme-global-color);
    }
} */

body {
    min-height: 100vh;
    display: flex;
    justify-content: center;

    margin: 0;
    padding: 0;

    --global-background: var(--dark-theme-global-background);
    --global-color: var(--dark-theme-global-color);
    
    font-family: var(--primary-font);
    color: var(--global-color);
    
    background: var(--global-background);
    
    transition: 500ms;
}
body.light {
    --global-background: var(--light-theme-global-background);
    --global-color: var(--light-theme-global-color);

    --primary-clr-hue: 293;
    --primary-clr: hsl(var(--primary-clr-hue), 100%, 38%);

    --complete-clr: hsl(var(--complete-clr-hue), 100%, 37%);
}
* {
    font-family: var(--primary-font);
}
::selection {
    background: var(--primary-clr);
    color: rgb(27, 27, 27);
}
[disabled] {
    filter: grayscale(1) !important;
    background: var(--global-background) !important;
    color: var(--global-color) !important;
    cursor: not-allowed !important;
    /* display: none !important; */
}
.disabled {
    filter: opacity(0);
    opacity: 0;
    pointer-events: none;
    cursor: not-allowed !important;
    display: none !important;
}
a {
    color: var(--primary-clr);
}
button {
    cursor: pointer
}
input,
.btn {
    font-size: 16px;
    padding: 10px;
    border: 0;
    border-radius: 10px;

    box-shadow: 0 0 0 1px hsl(var(--color-hue) 100% 50% / 0.6), var(--box-shadow-s);
}
.input {
    background: var(--global-background);
    color: var(--global-color);

    outline: none;
    --outline-clr: gray;
    --outline-weight: 1px;
    box-shadow: 0 0 1px var(--outline-weight) var(--outline-clr), var(--box-shadow-s);
    /* border: 1px solid var(--outline-clr); */
    transition: 180ms;
}
.input:focus {
    --outline-clr: var(--primary-clr);
}
.btn {
    font-weight: 800;
    cursor: pointer;
    background: var(--color);

    transition: 150ms;
}
.btn:hover:not([disabled]) {
    transform: scale(1.09);
    filter: opacity(1) brightness(1) !important;
}

.btn-icon {
    width: var(--btn-icon-size);
    height: var(--btn-icon-size);

    display: inline-flex;
    justify-content: center;
    align-items: center;

    font-size: 1.2rem;
    padding: 7px;
    border: none;
    color: var(--color);
    background: var(--global-background);
}
.btn-primary {
    --color-hue: var(--primary-clr-hue);
    --color: var(--primary-clr);
}
.btn-secondary {
    --color-hue: var(--secondary-clr-hue);
    --color: var(--secondary-clr);
}
.btn-edit {
    --color-hue: var(--primary-clr-hue);
    --color: var(--primary-clr);
}
.btn-delete {
    --color-hue: var(--danger-clr-hue) !important;
    --color: var(--danger-clr) !important;
}
.btn-complete {
    --color-hue: var(--complete-clr-hue);
    --color: var(--complete-clr);
}
.btn-add-subTask {
    --color-hue: 214;
    --color: hsl(214, 100%, 50%);
}

/* needed for timeCompleted to be shown correctly */
task {
    position: relative;
}