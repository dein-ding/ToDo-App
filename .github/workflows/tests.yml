name: Build, Run linter and tests

on:
    push:
        branches: ['main']
    pull_request:
        branches: ['main', 'dev/*']

jobs:
    build-client-and-test:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 16.x
                  cache: 'npm'
                  cache-dependency-path: package-lock.json

            - run: npm ci
            - run: nx run-many -t lint -p rockket-web,rockket-web-e2e --verbose
            - run: nx build rockket-web
            - run: nx test rockket-web
            - run: nx component-test rockket-web
              env:
                  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

            - name: Upload component test artifacts
              uses: actions/upload-artifact@v3
              if: failure()
              with:
                  name: rockket-web component test artifacts
                  path: dist/cypress/apps/rockket-web
                  retention-days: 7

    build-server-and-test:
        runs-on: ubuntu-latest
        env:
            DB_USER: app
            DB_PWD: develop
            DB_NAME: rockket-testing
            TESTING_DATABASE_URL: postgresql://app:develop@localhost:5432/rockket-testing?schema=public
            JWT_SECRET: this is the secret that nobody should know

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 16.x
                  cache: 'npm'
                  cache-dependency-path: package-lock.json

            - run: npm ci
            - run: nx run-many -t lint -p rockket-backend,rockket-backend-e2e --verbose
            - run: nx build rockket-backend
            - run: nx typecheck-snapshot-scripts rockket-backend

            - name: Setup Postgres
              uses: Daniel-Marynicz/postgresql-action@master
              with:
                  postgres_image_tag: 12-alpine
                  app_user: ${{ env.DB_USER }}
                  app_user_password: ${{ env.DB_PWD }}
                  app_db: ${{ env.DB_NAME }}
            - run: nx test rockket-backend
            - run: nx e2e rockket-backend-e2e

    run-full-e2e-tests:
        runs-on: ubuntu-latest
        env:
            DB_USER: app
            DB_PWD: develop
            DB_NAME: rockket-testing
            TESTING_DATABASE_URL: postgresql://app:develop@localhost:5432/rockket-testing?schema=public
            JWT_SECRET: this is the secret that nobody should know

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 16.x
                  cache: 'npm'
                  cache-dependency-path: client-v2/package-lock.json

            - name: Setup Postgres
              uses: Daniel-Marynicz/postgresql-action@master
              with:
                  postgres_image_tag: 12-alpine
                  app_user: ${{ env.DB_USER }}
                  app_user_password: ${{ env.DB_PWD }}
                  app_db: ${{ env.DB_NAME }}

            - run: npm ci
            - run: nx e2e rockket-web-e2e
              env:
                  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

            - name: Upload e2e test artifacts
              uses: actions/upload-artifact@v3
              if: failure()
              with:
                  name: rockket-web-e2e e2e test artifacts
                  path: dist/cypress/apps/rockket-web-e2e
                  retention-days: 7
